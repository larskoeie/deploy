#!/bin/sh

#
#
#
# - Command 'diff' uses rsync with --delete, real transfer commands do not ! So nothing will ever be deleted.
#
#
#

# Absolute path to this script. /home/user/bin/foo.sh
SCRIPT=$(readlink -f $0)
# Absolute path this script is in. /home/user/bin
SCRIPTPATH=`dirname $SCRIPT`
LOCALROOT=`pwd`

# apply sane config default values
LOCALHTTPFOLDER="http/"
REMOTEHTTPFOLDER="http/"
REMOTETYPE="ssh" # "local", "ssh" or "ftp"
REMOTETITLE=""


if [ ! -n "$1" ]; then echo "usage: deploy <command> path
commands :
  diff
    Show files and folders in specified path on local that are not on remote or have different size or timestamp

  diffdb
    Not on FTP mode.
  down
    Download the specified path from remote to local

  downdb
    Dump remote db to file, download file and import into local db.
  dumplocaldb
    Dump the local db to local file
  dumpremotedb
    Dump the remote db to local file. Not on FTP mode.
  up
    Upload the specified path from local to remote

";
  exit 1;
fi

# check if in site root (one above http/)
if [ ! -d "http" ]; then echo "Not site root."; 
  exit 1;
fi

# load site configuration
if [ ! -f ".deploy.cnf" ]; then echo "Missing .deploy.cnf."; exit;
fi

. $LOCALROOT/.deploy.cnf

# basic check of configuration
if [ ! $REMOTEROOT ]; then echo "Missing remoteroot"; exit;
fi
case $REMOTETYPE in 
  "local" )
    if [ $LOCALROOT$LOCALHTTPFOLDER = $REMOTEROOT$REMOTEHTTPFOLDER ]; then echo "Remote site is same as local."; exit;
    fi
  ;;
  "ssh" )
    if [ ! $REMOTEHOST ]; then echo "Missing remotehost"; exit;
    fi
    if [ ! $REMOTEUSER ]; then echo "Missing remoteuser"; exit;
    fi
  ;;
  "ftp" )
    if [ ! $REMOTEHOST ]; then echo "Missing remotehost"; exit;
    fi
    if [ ! $REMOTEUSER ]; then echo "Missing remoteuser"; exit;
    fi
  ;;
esac



# unset passwords
REMOTEPASSWORD=""
LOCALDBPASSWORD=""
REMOTEDBPASSWORD=""
# some var initialization
LOCALSITENAME=`basename $LOCALROOT`
REMOTESITENAME=`basename $REMOTEROOT`
TIME=`date +"%y%m%d"`
DIFFCOLORSED='s/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'
RSYNCCOLORSED="s/<f/\x1b[44m&/g;s/>f/\x1b[44m&/g;s/$/\x1b[0m/g"
EXCLUDEFROM="--exclude-from $SCRIPTPATH/deploy-exclude.txt"


if [ "$REMOTETYPE" = "ftp" ]; then
  unset REMOTEPASSWORD
  prompt="FTP password for $REMOTEUSER@$REMOTEHOST : "
  while IFS= read -p "$prompt" -r -s -n 1 char
  do
      if [[ $char == $'\0' ]]
      then
          break
      fi
      prompt='*'
      REMOTEPASSWORD+="$char"
  done
  echo
  if [ ! -d ".deploy/remote" ]; then
  	mkdir -p .deploy/remote
	fi

fi

if [ -n "$2" ]; then
	
	# remove slashes from httpfolder
	REMOTEROOT=`echo $REMOTEROOT | sed "s/\/*$//g"` 
	LOCALHTTPFOLDER=`echo $LOCALHTTPFOLDER | sed "s/\/*$//g"` 
	REMOTEHTTPFOLDER=`echo $REMOTEHTTPFOLDER | sed "s/\/*$//g"` 

	LOCALPATH=$2
	REMOTEPATH=`echo "$LOCALPATH" | sed "s/^$LOCALHTTPFOLDER/$REMOTEHTTPFOLDER/g"`

	# add trailing slashes
	LOCALROOT="$LOCALROOT/"
	REMOTEROOT="$REMOTEROOT/"
	LOCALHTTPFOLDER="$LOCALHTTPFOLDER/"	
	REMOTEHTTPFOLDER="$REMOTEHTTPFOLDER/"	

	# remove any trailing slash
	LOCALPATH=`echo $LOCALPATH | sed "s/\/*$//g"` 
	REMOTEPATH=`echo $REMOTEPATH | sed "s/\/*$//g"` 

	# if path on local is a directory, add trailing slash, on local AND on remote
	if [ -d "$LOCALPATH" ]; then
	  LOCALPATH="$LOCALPATH/"
	  REMOTEPATH="$REMOTEPATH/"
	fi

	if [ "$LOCALROOT$LOCALPATH" = "$REMOTEROOT$REMOTEPATH" ]; then
		echo "Error: local and remote site are in the same place."
		exit
	fi
	
	exit
	
fi


. deploy-typo3
#source deploy-drupal7

if [ -n "$REMOTETITLE" ]
then
  echo Remote host : $REMOTETITLE
fi

if [ $handled ]; then
  exit 0;
fi

case "$1" in
  "remote" )
    CONFIG=$2
    if [ -n "$CONFIG" ]; 
    then
      if [ ! -f .deploy-$CONFIG.cnf ]
      then
        echo No config file .deploy-$CONFIG.cnf
        exit 1
      fi
      cp -f .deploy-$CONFIG.cnf .deploy.cnf
      . .deploy.cnf
      echo Switched to remote $REMOTETITLE
    fi
    ;;
  "config" )
    cat .deploy.cnf
    ;;
  "diff" )
    if [ ! -n "$LOCALPATH" ]; then echo "Usage: deploy diff <path>"; exit 1; 
    fi

    echo "Diffing $LOCALPATH with $REMOTEPATH ...";

    case "$REMOTETYPE" in
      "local" )
        if [ -f $LOCALPATH ] && [ -f $REMOTEROOT$REMOTEPATH ]
        then
          diff -w -u $REMOTEROOT$REMOTEPATH $LOCALPATH | sed $DIFFCOLORSED
        fi
        if [ -d $LOCALPATH ]
        then
          rsync -avnci $LOCALPATH $REMOTEROOT$REMOTEPATH | sed $RSYNCCOLORSED
        fi

      ;;
      "ssh" )
        if [ -f $LOCALPATH ]
        then
          echo "Blue lines are added on local - red are removed"
          # do an actual diff on two files
          ssh $REMOTEUSER@$REMOTEHOST "cat $REMOTEROOT$REMOTEPATH" | diff -w -u - "$LOCALPATH" | sed 's/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'
        fi
        if [ -d $LOCALPATH ]
        then
          # diff structures using rsync
          echo "Blue lines are changed or added on local."
          rsync -avnci --delete $EXCLUDEFROM ${2%/}/ $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH | sed $RSYNCCOLORSED

        fi
      ;;

      "ftp" )
        cd .deploy/remote
        wget -r -nH -nv ftp://$REMOTEUSER:$REMOTEPASSWORD@$REMOTEHOST//$REMOTEPATH
        cd ../..
        if [ -f $LOCALPATH ]
        then
          echo "Blue lines are added on local - red are removed"
          # do an actual diff on two files
          diff -w -u $LOCALPATH .deploy/remote$REMOTEROOT$REMOTEPATH | sed $DIFFCOLORSED
        fi
        if [ -d $LOCALPATH ]
        then
          # diff structures using rsync
          echo "Blue lines are changed or added on local."
          rsync -avnci $EXCLUDEFROM $LOCALPATH .deploy/remote$REMOTEROOT$REMOTEPATH | sed "s/<f/\x1b[44m&/g;s/>f/\x1b[44m&/g;s/$/\x1b[0m/g"

        fi

      ;;
    esac
    ;;

  "diffdb" )
    # do a diff on the two db-dump files
    LOCAL="$LOCALSITENAME-local.sql"
    REMOTE="$LOCALSITENAME-remote.sql"

    if [ ! -f $LOCAL ]
      then echo "no local dump - use dumplocaldb"; exit;
    fi
    if [ ! -f $REMOTE ]
      then echo "no remote dump - use dumpremotedb"; exit;
    fi

    diff $LOCAL $REMOTE | sed $DIFFCOLORSED
    ;;

  # diff and grep for text within diff result
  "diffsearch" )
    if [ ! -n "$LOCALPATH" ]; then echo "Usage: deploy diffsearch <path> <string>"; exit 1;
    fi
    if [ ! -n "$3" ]; then echo "Usage: deploy diffsearch <path> <string>"; exit 1;
    fi

    echo "Diffing '$LOCALPATH' and searching for '$3' ...";

    if [ -f $LOCALPATH ]
    then
      echo "Blue lines are added on local - red are removed"
      # do an actual diff on two files
      ssh $REMOTEUSER@$REMOTEHOST "cat $REMOTEROOT$REMOTEPATH" | diff -w -u - "$LOCALPATH" | grep $3 | sed 's/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'
    fi
    if [ -d $LOCALPATH ]
    then
      echo "Changed files :"
      # diff structures using rsync
      rsync -avnc $EXCLUDEFROM ${2%/}/ $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH | grep $3

    fi
    ;;
  "down" )
    if [ ! -n "$LOCALPATH" ]; then echo "Usage: deploy down <path>"; exit 1;
    fi

    # check if "http/" is owned by the current user. If not, downloading files, will probably cause trouble. Confirm.
    HTTPOWNER=$(stat -c %U http)
    if [ $HTTPOWNER != $(id -u -n) ]; then
      echo "You are not $HTTPOWNER. Continue? y/n";
      prompt=""
      read -p "$prompt" -r -s -n 1 char
      if [[ $char != "y" ]]
      then
        echo;
        exit;
      fi

    fi

    echo "Downloading $LOCALPATH ...";
    case "$REMOTETYPE" in
      "local" )
        rsync -avci $REMOTEROOT$REMOTEPATH $LOCALPATH | sed $RSYNCCOLORSED        
      ;;
      "ssh" )
        # download structure or single file using rsync
        rsync -avi $EXCLUDEFROM $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH $LOCALPATH
        ;;
      "ftp" )
        cd .deploy/remote
        wget -r -nH ftp://$REMOTEUSER:$REMOTEPASSWORD@$REMOTEHOST//$REMOTEPATH
        cd ../..
        rsync -avi $EXCLUDEFROM .deploy/remote$REMOTEROOT$REMOTEPATH $LOCALPATH
        ;;
    esac
    ;;
  "downdb" )
    if [ $REMOTETYPE != "ssh" ]
    then
      echo "SSH mode only."
      exit 1;
    fi

    DUMPPATH="$LOCALSITENAME-remote.sql"
    # dump remote db
    ssh $REMOTEUSER@$REMOTEHOST "mysqldump -h $REMOTEDBHOST -u $REMOTEDBUSER -p $REMOTEDB > temp.sql"
    # download result
    scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH
    # import
    mysql -h $LOCALDBHOST -u $LOCALDBUSER -p$LOCALDBPASSWORD $LOCALDB < ./$DUMPPATH
    ;;

  "dumplocaldb" )
    # this dump is specifically with diff in mind
    if [ ! -n "$LOCALDB" ]; then echo "Missing localdb - check .deploy.cnf"; exit 1;
    fi
    DUMPPATH="$LOCALSITENAME-local.sql"
    #ignoretables=""
    # determine ignore-tables - this is based on type of system
    #if [ ISTYPO3 ]; then
    #  ignoretables=`mysql -DN $LOCALDB -e "show tables like '%cache%'" | awk '{printf " --ignore-table='$LOCALDB'."$1" "}'`
    #fi
    echo "Dumping to $DUMPPATH ..."
    # --skip-extended-insert makes dump larger, but provides better results with diff later on
    mysqldump --skip-extended-insert $ignoretables -h $LOCALDBHOST -u $LOCALDBUSER -p $LOCALDB > $DUMPPATH
    ;;

  "dumpremotedb" )
    if [ $REMOTETYPE != "ssh"]
    then echo "SSH mode only."; exit 1;
    fi

    if [ ! -n "$REMOTEDB" ]; then echo "Missing remotedb - check .deploy.cnf"; exit 1;
    fi
    DUMPPATH="$LOCALSITENAME-remote.sql"
    ignoretables=""
    # determine ignore-tables - this is based on type of system
    #if [ ISTYPO3 ]; then
    #  ignoretables=`ssh $REMOTEUSER@$REMOTEHOST 'mysql -DN $REMOTEDB -e "show tables like '%cache%'" | awk '{printf " --ignore-table='$LOCALDB'."$1" "}''`
    #fi
    ssh $REMOTEUSER@$REMOTEHOST "mysqldump --skip-extended-insert -h $REMOTEDBHOST -u $REMOTEDBUSER -p $REMOTEDB > ~/temp.sql"
    scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH
    ;;

  "sqlq" )
    echo $2 > deploy-temp.sql;
    mysql -h $LOCALDBHOST -u $LOCALDBUSER -p$LOCALDBPASSWORD $LOCALDB < deploy-temp.sql

    ;;
  "up" )
    if [ ! -n "$LOCALPATH" ]; then echo "Usage: deploy up <path>"; exit 1; 
    fi

    echo "Uploading $LOCALPATH ...";
    case $REMOTETYPE in 
      "local" )
        rsync -avci $LOCALPATH $REMOTEROOT$REMOTEPATH | sed $RSYNCCOLORSED        
      ;;
      "ssh" )
        rsync -avci $EXCLUDEFROM $LOCALPATH $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH
      ;;
      "ftp" )
        rsync -avnic $EXCLUDEFROM $LOCALPATH .deploy/remote$REMOTEROOT$REMOTEPATH
        cd .deploy/remote
#        echo  <<EOF
#open $REMOTEHOST
#user $REMOTEUSER $REMOTEPASSWORD
#put $REMOTEROOT$REMOTEPATH
#EOF 
      ;;
    esac
    ;;

  # create tar with folder
  "dumplocal" )
    if [ ! -n "$LOCALPATH" ]; then echo "Usage: deploy dumplocal <path>"; exit 1;
    fi

    DUMPPATH=`echo $LOCALSITENAME-local-$LOCALPATH | sed 's/\//-/g'`
    echo $DUMPPATH

    tar -cvfz $DUMPPATH.tar.gz $LOCALPATH
    ;;

  "dumpremote" )
    ssh $REMOTEUSER@$REMOTEHOST "tar -pcvfz ~/$LOCALSITENAME-local.tar.gz $LOCALPATH"
    scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH


    ;;
esac

if [ -f deploy-temp.sql ]; then rm deploy-temp.sql;
fi

