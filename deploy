#!/bin/bash

#
#
#
# - Command 'diff' uses rsync with --delete, real transfer commands do not ! So nothing will ever be deleted.
#
#
#

# Absolute path to this script. /home/user/bin/foo.sh
SCRIPT=$(readlink -f $0)
# Absolute path this script is in. /home/user/bin
SCRIPTPATH=`dirname $SCRIPT`
REMOTEHTTPFOLDER="http/"

LOCALROOT=`pwd`

if [ ! -n "$1" ]; then echo "usage: deploy <command> path
commands :
  diff
  	Show files and folders in specified path on local that are not on remote or have different size or timestamp
  	
  diffdb
  
  down
  	Download the specified path from remote to local using rsync

	downdb
		Dump remote db to file, download file and import into local db.		
	dumplocaldb
		Dump the local db to local file
	dumpremotedb
		Dump the remote db to local file
  up
  	Upload the specified path from local to remote using rsync
		  
";
	exit 1;
fi

# check if in site root (one above http/)
if [ ! -d "http" ]; then echo "Not site root."; 
	exit 1;
fi

# load site configuration
if [ ! -f ".deploy.cnf" ]; then echo "Missing .deploy.cnf."; exit;
fi
source .deploy.cnf
# unset passwords
LOCALDBPASSWORD=""
REMOTEDBPASSWORD=""

# basic check of configuration
if [ ! $REMOTEHOST ]; then echo "Invalid .deploy.cnf"; exit;
fi

# some var initialization
LOCALSITENAME=`basename $LOCALROOT`
REMOTESITENAME=`basename $REMOTEROOT`
TIME=`date +"%y%m%d"`
DIFFCOLORSED='s/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'
EXCLUDEFROM="--exclude-from $SCRIPTPATH/deploy-exclude.txt"

# substitute "http/" with the name of the http-folder on remote
REMOTEPATH="$REMOTEHTTPFOLDER${2:5}"

# if path on local is a directory, make sure it has a trailing slash, on local AND on remote
LOCALPATH=$2
if [ -d "$LOCALPATH" ]; then 
	LOCALPATH="${LOCALPATH%/}/"
	REMOTEPATH="${REMOTEPATH%/}/"
fi


if [ -d "http/includes" ]; then echo "Looks like Drupal 7 site";
	ISDRUPAL=TRUE; 
	ISDRUPAL7=TRUE;           
	EXCLUDEFROM="$EXCLUDEFROM --exclude-from $SCRIPTPATH/deploy-exclude-drupal7.txt"
	source deploy-drupal7
fi

if [ -d "http/core/includes" ]; then echo "Looks like Drupal 8 site";
	ISDRUPAL=TRUE;          
	ISDRUPAL8=TRUE;  
	EXCLUDEFROM="$EXCLUDEFROM --exclude-from $SCRIPTPATH/deploy-exclude-drupal8.txt"
fi

source deploy-typo3

#if [ $handled -eq 1 ]; then
#	exit 0;
#fi

case "$1" in 
	"config" )
		cat .deploy.cnf
		;;
	"diff" )
		if [ ! -n "$2" ]; then echo "Usage: deploy diff <path>"; exit 1; 
		fi

		echo "Diffing $2 ...";

		if [ -f $2 ] 
		then
			echo "Blue lines are added on local - red are removed"
			# do an actual diff on two files
			ssh $REMOTEUSER@$REMOTEHOST "cat $REMOTEROOT$REMOTEPATH" | diff -w -u - "$2" | sed 's/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'
		fi
		if [ -d $2 ] 
		then
			# diff structures using rsync
			echo "Blue lines are changed or added on local."
			rsync -avnci --delete $EXCLUDEFROM ${2%/}/ $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH | sed "s/<f/\x1b[44m&/g;s/$/\x1b[0m/g"
			
		fi
		
		;;
		
	"diffdb" )
		# do a diff on the two db-dump files
		LOCAL="$LOCALSITENAME-local.sql"
		REMOTE="$LOCALSITENAME-remote.sql"
		
		if [ ! -f $LOCAL ] 
			then echo "no local dump - use dumplocaldb"; exit;
		fi
		if [ ! -f $REMOTE ] 
			then echo "no remote dump - use dumpremotedb"; exit;
		fi
		
		diff $LOCAL $REMOTE | sed $DIFFCOLORSED
		;;
		
	# diff and grep for text within diff result
	"diffsearch" )
		if [ ! -n "$2" ]; then echo "Missing path"; exit 1; 
		fi
		if [ ! -n "$3" ]; then echo "Missing search string"; exit 1; 
		fi

		echo "Diffing '$2' and searching for '$3' ...";

		if [ -f $2 ] 
		then
			echo "Blue lines are added on local - red are removed"
			# do an actual diff on two files
			ssh $REMOTEUSER@$REMOTEHOST "cat $REMOTEROOT$REMOTEPATH" | diff -w -u - "$2" | grep $3 | sed 's/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'
		fi
		if [ -d $2 ] 
		then
			echo "Changed files :"
			# diff structures using rsync and iterate result outputting only actual file names
			# skip directories and other stuff 
			rsync -avnc $EXCLUDEFROM ${2%/}/ $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH | grep $3
			
		fi
	
		;;
	"down" )
		if [ ! -n "$2" ]; then echo "missing path"; exit 1; 
		fi

		# check if "http/" is owned by the current user. If not, downloading files, will probably cause trouble. Confirm.
		HTTPOWNER=$(stat -c %U http)
		if [ $HTTPOWNER != $(id -u -n) ]; then 
			echo "You are not $HTTPOWNER. Continue? y/n";
			prompt=""
			read -p "$prompt" -r -s -n 1 char
	    if [[ $char != "y" ]]
	    then
	    	echo;
        exit;0
	    fi

		fi

		echo "Downloading $LOCALPATH ...";
		# download structure or single file using rsync
		rsync -avi $EXCLUDEFROM $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH $LOCALPATH 
		;;

	"downdb" )
		DUMPPATH="$LOCALSITENAME-remote.sql"
		# dump remote db
		ssh $REMOTEUSER@$REMOTEHOST "mysqldump -h $REMOTEDBHOST -u $REMOTEDBUSER -p $REMOTEDB > temp.sql"
		# download result
		scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH 		
		# import
		mysql -h $LOCALDBHOST -u $LOCALDBUSER -p$LOCALDBPASSWORD $LOCALDB < ./$DUMPPATH
		;;
		
	"dumplocaldb" )
		# this dump is specifically with diff in mind
		if [ ! -n "$LOCALDB" ]; then echo "Missing localdb - check .deploy.cnf"; exit 1; 
		fi
		DUMPPATH="$LOCALSITENAME-local.sql"
		#ignoretables=""
		# determine ignore-tables - this is based on type of system
		#if [ ISTYPO3 ]; then
		#	ignoretables=`mysql -DN $LOCALDB -e "show tables like '%cache%'" | awk '{printf " --ignore-table='$LOCALDB'."$1" "}'`
		#fi
		echo "Dumping to $DUMPPATH ..."
		# --skip-extended-insert makes dump larger, but provides better results with diff later on
		mysqldump --skip-extended-insert $ignoretables -h $LOCALDBHOST -u $LOCALDBUSER -p $LOCALDB > $DUMPPATH
		;;
		
	"dumpremotedb" )
		if [ ! -n "$REMOTEDB" ]; then echo "Missing remotedb - check .deploy.cnf"; exit 1; 
		fi
		DUMPPATH="$LOCALSITENAME-remote.sql"
		ignoretables=""
		# determine ignore-tables - this is based on type of system
		#if [ ISTYPO3 ]; then
		#	ignoretables=`ssh $REMOTEUSER@$REMOTEHOST 'mysql -DN $REMOTEDB -e "show tables like '%cache%'" | awk '{printf " --ignore-table='$LOCALDB'."$1" "}''`
		#fi
		ssh $REMOTEUSER@$REMOTEHOST "mysqldump --skip-extended-insert -h $REMOTEDBHOST -u $REMOTEDBUSER -p $REMOTEDB > ~/temp.sql"
		scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH 		
		;;	
		
	"sqlq" )
		echo $2 > deploy-temp.sql;
		mysql -h $LOCALDBHOST -u $LOCALDBUSER -p$LOCALDBPASSWORD $LOCALDB < deploy-temp.sql
		
		;;
	"up" )
		if [ ! -n "$2" ]; then echo "missing path"; exit 1; 
		fi

		echo "Uploading $2 ...";
		rsync -avci $EXCLUDEFROM $LOCALPATH $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH		
		;;

	# create tar with folder
	"dumplocal" )		
		if [ ! -n "$2" ]; then echo "Missing path"; exit 1; 
		fi

		DUMPPATH=`echo $LOCALSITENAME-local-$2 | sed 's/\//-/g'`
		echo $DUMPPATH
		
		tar -cvfz $DUMPPATH.tar.gz $2
		;;
	
	"dumpremote" )
		ssh $REMOTEUSER@$REMOTEHOST "tar -pcvfz ~/$LOCALSITENAME-local.tar.gz $2"
		scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH 		
		
		
		;;
		
esac

if [ -f deploy-temp.sql ]; then rm deploy-temp.sql; 
fi
		
