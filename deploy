#!/bin/bash

# Absolute path to this script. /home/user/bin/foo.sh
SCRIPT=$(readlink -f $0)
# Absolute path this script is in. /home/user/bin
SCRIPTPATH=`dirname $SCRIPT`
REMOTEHTTPFOLDER="http/"

LOCALROOT=`pwd`

if [ ! -n "$1" ]; then echo "usage: deploy <command> path
commands :
  diff
  	Show files and folders in specified path on local that are not on remote or have different size or timestamp
  up
  	Upload the specified path from local to remote using rsync
  	
  down
  	Download the specified path from remote to local using rsync
  diffdb
  
  downdb
  	Dump remote db to file, download file and import to local db
	dumplocaldb
		Dump the local db to local file
	dumpremotedb
		Dump the remote db to local file
		  
";
	exit 1;
fi

# check if in site root (one above http/)
if [ ! -d "http" ]; then echo "Not site root."; 
	exit 1;
fi

# load site configuration
if [ ! -f ".deploy.cnf" ]; then echo "Missing .deploy.cnf."; exit;
fi
source .deploy.cnf

# basic check of configuration
if [ ! $REMOTEHOST ]; then echo "Invalid .deploy.cnf"; exit;
fi

# some var initialization
LOCALSITENAME=`basename $LOCALROOT`
REMOTESITENAME=`basename $REMOTEROOT`
TIME=`date +"%y%m%d"`
DIFFCOLORSED='s/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'


EXCLUDEFROM=$SCRIPTPATH/deploy-exclude.txt

# try to recognize certain applications
if [ -d "http/typo3" ]; then echo "Looks like TYPO3 site"; 
	ISTYPO3=TRUE; 
	EXCLUDEFROM=$SCRIPTPATH/deploy-exclude-typo3.txt
fi

if [ -d "http/includes" ]; then echo "Looks like Drupal site";
	ISDRUPAL=TRUE; 
fi

# substitute "http/" with the name of the http-folder on remote
REMOTEPATH="$REMOTEHTTPFOLDER${2:5}"

#if [ ! $ISTYPO3 ] && [ ! $ISDRUPAL ]; then exit 1;
#fi


case "$1" in 
	"user-create" )
		if [ ISTYPO3 ]; then				
			username=$2
			if [ ! -n "$username" ]; then echo "Usage : deploy user-create <username>"; exit 1;
			fi
			# password is "password"
			# tested on TYPO3 4.7
			echo "insert into be_users (username, password, admin) values ('$username', '5f4dcc3b5aa765d61d8327deb882cf99', 1);" > deploy-temp.sql
			# different salting - should work on TYPO3 6.1 - not tested
			# echo "insert into be_users (username, password, admin) values ('admin', '', 1);" > temp.sql
			
		fi
		if [ -f deploy-temp.sql ]; then
			mysql -h $LOCALDBHOST -u $LOCALDBUSER -p $LOCALDB < deploy-temp.sql
			echo "User '$username' created with password 'password' - please change password immediately."
		fi
		;;		
	"diff" )
		if [ ! -n "$2" ]; then echo "missing path"; exit 1; 
		fi

		echo "Diffing $2 ...";

		if [ -f $2 ] 
		then
			echo "Blue lines are added on local - red are removed"
			# do an actual diff on two files
			ssh $REMOTEUSER@$REMOTEHOST "cat $REMOTEROOT$REMOTEPATH" | diff -w -u - "$2" | sed 's/^-/\x1b[41m-/;s/^+/\x1b[44m+/;s/$/\x1b[0m/'
		fi
		if [ -d $2 ] 
		then
			echo "Changed files :"
			# diff structures using rsync and iterate result outputting only actual file names
			# skip directories and other stuff 
			for file in `rsync -avnc --exclude-from $SCRIPTPATH/deploy-exclude.txt --exclude-from $EXCLUDEFROM ${2%/}/ $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH | xargs`; do 
				if [ -f ${2%/}/$file ]; then 
					ls -l ${2%/}/$file;  
				else
					echo $file;
				fi; 
			done;

		fi
	
		;;
		
	"diffdb" )
		# do a diff on the two db-dump files
		LOCAL="$LOCALSITENAME-local.sql"
		REMOTE="$LOCALSITENAME-remote.sql"
		
		if [ ! -f $LOCAL ] 
			then echo "no local dump - use dumplocaldb"; exit;
		fi
		if [ ! -f $REMOTE ] 
			then echo "no remote dump - use dumpremotedb"; exit;
		fi
		
		diff $LOCAL $REMOTE | sed $DIFFCOLORSED
		;;
		
	"down" )
		if [ ! -n "$2" ]; then echo "missing path"; exit 1; 
		fi

		# check if "http/" is owned by the current user. If not, downloading files, will probably cause trouble. Confirm.
		HTTPOWNER=$(stat -c %U http)
		if [ $HTTPOWNER != $(id -u -n) ]; then 
			echo "You are not $HTTPOWNER. Continue? y/n";
			prompt=""
			read -p "$prompt" -r -s -n 1 char
	    if [[ $char != "y" ]]
	    then
	    	echo;
        exit;0
	    fi

		fi

		echo "Downloading $2 ...";
		# download structure or single file using rsync
		rsync -av --exclude-from $SCRIPTPATH/deploy-exclude.txt --exclude-from $EXCLUDEFROM $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH $2 
		;;

	"downdb" )
		DUMPPATH="$LOCALSITENAME-remote.sql"
		# dump remote db
		ssh $REMOTEUSER@$REMOTEHOST "mysqldump -h $REMOTEDBHOST -u $REMOTEDBUSER -p $REMOTEDB > temp.sql"
		# download result
		scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH 		
		;;
		
	"dumplocaldb" )
		# this dump is specifically with diff in mind
		if [ ! -n "$LOCALDB" ]; then echo "Missing localdb - check .deploy.cnf"; exit 1; 
		fi
		DUMPPATH="$LOCALSITENAME-local.sql"
		ignoretables=""
		# determine ignore-tables - this is based on type of system
		if [ ISTYPO3 ]; then
			ignoretables=`mysql -DN $LOCALDB -e "show tables like '%cache%'" | awk '{printf " --ignore-table='$LOCALDB'."$1" "}'`
		fi
		echo "Dumping to $DUMPPATH ..."
		# --skip-extended-insert makes dump larger, but provides better results with diff later on
		mysqldump --skip-extended-insert $ignoretables -h $LOCALDBHOST -u $LOCALDBUSER -p $LOCALDB > $DUMPPATH
		;;
		
	"dumpremotedb" )
		if [ ! -n "$REMOTEDB" ]; then echo "Missing remotedb - check .deploy.cnf"; exit 1; 
		fi
		DUMPPATH="$LOCALSITENAME-remote.sql"
		ignoretables=""
		# determine ignore-tables - this is based on type of system
		if [ ISTYPO3 ]; then
			ignoretables=`ssh $REMOTEUSER@$REMOTEHOST 'mysql -DN $LOCALDB -e "show tables like '%cache%'" | awk '{printf " --ignore-table='$LOCALDB'."$1" "}''`
		fi
		ssh $REMOTEUSER@$REMOTEHOST "mysqldump --skip-extended-insert -h $REMOTEDBHOST -u $REMOTEDBUSER -p $REMOTEDB > ~/temp.sql"
		scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH 		
		;;	
		
	"up" )
		if [ ! -n "$2" ]; then echo "missing path"; exit 1; 
		fi

		echo "Uploading $2 ...";
		rsync -av --exclude-from $SCRIPTPATH/deploy-exclude.txt --exclude-from $EXCLUDEFROM $2 $REMOTEUSER@$REMOTEHOST:$REMOTEROOT$REMOTEPATH		
		;;

	# create tar with folder
	"dumplocal" )		
		if [ ! -n "$2" ]; then echo "Missing path"; exit 1; 
		fi

		DUMPPATH=`echo $LOCALSITENAME-local-$2 | sed 's/\//-/g'`
		echo $DUMPPATH
		
		tar -cvfz $DUMPPATH.tar.gz $2
		;;
	
	"dumpremote" )
		ssh $REMOTEUSER@$REMOTEHOST "tar -pcvfz ~/$LOCALSITENAME-local.tar.gz $2"
		scp $REMOTEUSER@$REMOTEHOST:~/temp.sql $DUMPPATH 		
		
		
		;;
		
esac

if [ -f deploy-temp.sql ]; then rm deploy-temp.sql; 
fi
		
